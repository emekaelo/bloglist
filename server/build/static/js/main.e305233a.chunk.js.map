{"version":3,"sources":["services/api-service.js","components/Notification.js","components/Search.js","components/Form.js","components/List.js","components/App.js","index.js"],"names":["baseUrl","apiService","getAll","axios","get","then","response","data","create","payload","post","deleteItem","id","delete","update","put","Notification","notify","className","type","message","Search","searchName","handleSearchNameChange","value","onChange","Form","props","newName","newNumber","handleNameChange","handleNumberChange","addName","onClick","Persons","name","person","setPersons","persons","notifyUserWith","number","window","confirm","newPersons","filter","catch","error","List","map","App","useState","searchList","setSearchList","setNewName","setNewNumber","setSearchName","setNotify","useEffect","setTimeout","event","target","result","toLowerCase","includes","preventDefault","some","entry","find","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e305233a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (payload) => {\r\n  return axios.post(baseUrl, payload).then((response) => response.data);\r\n};\r\n\r\nconst deleteItem = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (id, payload) => {\r\n  return axios.put(`${baseUrl}/${id}`, payload);\r\n};\r\n\r\nconst apiService = {\r\n  getAll,\r\n  create,\r\n  deleteItem,\r\n  update,\r\n};\r\n\r\nexport default apiService;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notify }) => {\r\n  if (!notify) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={notify.type}>\r\n      <p>{notify.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ searchName, handleSearchNameChange }) => {\r\n  return (\r\n    <div>\r\n      Search:\r\n      <input value={searchName} onChange={handleSearchNameChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  const {\r\n    newName,\r\n    newNumber,\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    addName,\r\n  } = props;\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n        <br />\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={addName}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport apiService from \"../services/api-service\";\r\n\r\nconst List = ({ persons, setPersons, notifyUserWith }) => {\r\n  return (\r\n    <ul>\r\n      {persons.map((person) => {\r\n        return (\r\n          <Persons\r\n            persons={persons}\r\n            key={person.id}\r\n            person={person}\r\n            setPersons={setPersons}\r\n            notifyUserWith={notifyUserWith}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Persons = ({ person, setPersons, persons, notifyUserWith }) => {\r\n  const remove = (id, name) => () => {\r\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n      apiService\r\n        .deleteItem(id)\r\n        .then((response) => {\r\n          const newPersons = persons.filter((person) => person.id !== id);\r\n          setPersons(newPersons);\r\n          notifyUserWith(\r\n            `${name} successfully deleted`,\r\n            \"success-notification\"\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          notifyUserWith(\r\n            `Sorry, ${name} may have been deleted from the database`,\r\n            \"error-notification\"\r\n          );\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={remove(person.id, person.name)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport apiService from \"../services/api-service\";\r\nimport Notification from \"./Notification\";\r\nimport Search from \"./Search\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  const [searchList, setSearchList] = useState(persons);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [notify, setNotify] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiService.getAll().then((response) => {\r\n      setPersons(response);\r\n      setSearchList(response);\r\n    });\r\n  }, []);\r\n\r\n  const notifyUserWith = (message, type = \"success-notification\") => {\r\n    setNotify({ message, type });\r\n    setTimeout(() => {\r\n      setNotify(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    const payload = { name: newName, number: newNumber };\r\n\r\n    if (persons.some((person) => person.name === newName)) {\r\n      //alert(`${newName} is already in phonebook`);\r\n      const entry = persons.find(({ name }) => name === newName);\r\n\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already in phonebook, do you want to replace the number?`\r\n        )\r\n      ) {\r\n        apiService\r\n          .update(entry.id, payload)\r\n          .then((response) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== entry.id ? person : response.data\r\n              )\r\n            );\r\n            notifyUserWith(\r\n              `${newName} successfully updated`,\r\n              \"success-notification\"\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            /*  alert(\r\n              `Sorry, ${entry.name} may have been deleted from the database`\r\n            ); */\r\n            notifyUserWith(\r\n              `${error.response.data.error}`,\r\n              \"error-notification\"\r\n            );\r\n            //setPersons(persons.filter((person) => person.id !== entry.id));\r\n          });\r\n      }\r\n    } else {\r\n      apiService\r\n        .create(payload)\r\n        .then((response) => {\r\n          setPersons(persons.concat(response));\r\n          notifyUserWith(\r\n            `${newName} successfully added`,\r\n            \"success-notification\"\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          notifyUserWith(`${error.response.data.error}`, \"error-notification\");\r\n          console.log(error.response.data);\r\n        });\r\n    }\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleSearchNameChange = (event) => {\r\n    setSearchName(event.target.value);\r\n    const result = searchList.filter((person) =>\r\n      person.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setPersons(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Notification notify={notify} />\r\n      <Search\r\n        searchName={searchName}\r\n        handleSearchNameChange={handleSearchNameChange}\r\n      />\r\n      <h2>Phonebook</h2>\r\n      <Form\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        addName={addName}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <List\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        notifyUserWith={notifyUserWith}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}